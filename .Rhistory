usethis::use_package("igraph")
install.packages("igraph")
usethis::use_package("igraph")
usethis::create_package()
usethis::create_package(".")
usethis::create_package(".")
Rcpp::sourceCpp("src/dist2.cpp")
install.packages("RcppSparse")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
library(Matrix)
mat <- rsparsematrix(100, 100, 0.5)
colSums <- Rcpp_colSums(mat)
Rcpp::sourceCpp("src/dist2.cpp")
mat <- rsparsematrix(100, 100, 0.5)
get_distsparse_cpp(mat, 1, 1)
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
Rcpp::sourceCpp("src/dist2.cpp")
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 1)
})
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 2)
})
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 4)
})
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 4)
})
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 5)
})
mat <- rsparsematrix(1e4, 1e4, 0.1)
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, 5)
})
print(r)
hist(r$distance)
library(Matrix)
mat <- rsparsematrix(1e4, 1e4, 0.1)
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, d=5)
})
hist(r$distance)
mat <- rsparsematrix(1e4, 1e4, 0.2)
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, d=5)
})
hist(r$distance)
Rcpp::sourceCpp("src/dist2.cpp")
mat <- rsparsematrix(1e4, 1e4, 0.2)
mat@i
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, d=5)
})
hist(r$distance)
Rcpp::sourceCpp("src/dist2.cpp")
r$dc
mat <- rsparsematrix(1e4, 1e4, 0.05)
# colSums <- Rcpp_colSums(mat)
system.time({
r <- get_distsparse_cpp(mat, 1, d=5)
})
hist(r$distance)
N <- 1e6
M <- 1e8
from <- sample(N, size=M, replace = TRUE)
to <- sample(N, size=M, replace = TRUE)
x <- data.frame(from, to)
x <- x[x$from != x$to,]
system.time({
get_dist_cpp(x, from[1], 2, N)
})
library(Matrix)
m <- sparseMatrix(i = d$from, j = d$to, dims = c(N,N), dimnames = list(from=levs, to=levs))
d <-
"from,to
A,B
A,C
B,D
" |> data.table::fread(colClasses = "factor")
library(Matrix)
levs <- c(levels(d$from), levels(d$to)) |> unique()
N <- length(levs)
d[, from := factor(from, levels = levs)]
d[, to := factor(to, levels=levs)]
m <- sparseMatrix(i = d$from, j = d$to, dims = c(N,N), dimnames = list(from=levs, to=levs))
get_distsparse_cpp(mat, 0, 1)
mat <- sparseMatrix(i = d$from, j = d$to, dims = c(N,N), dimnames = list(from=levs, to=levs))
d <-
"from,to
A,B
A,C
B,D
" |> data.table::fread(colClasses = "factor")
library(Matrix)
levs <- c(levels(d$from), levels(d$to)) |> unique()
N <- length(levs)
d[, from := factor(from, levels = levs)]
d[, to := factor(to, levels=levs)]
mat <- sparseMatrix(i = d$from, j = d$to, dims = c(N,N), dimnames = list(from=levs, to=levs))
mat
get_distsparse_cpp(mat, 0, 1)
mat <- sparseMatrix(i = d$from, j = d$to, dims = c(N,N), dimnames = list(from=levs, to=levs))
get_distsparse_cpp(mat, 0, 1)
mat@i
mat
mat@Dim
mat@factors
mat@i
mat@p
mat <- sparseMatrix(i = d$from, j = d$to, x = 1, dims = c(N,N), dimnames = list(from=levs, to=levs))
get_distsparse_cpp(mat, 0, 1)
get_distsparse_cpp(mat, 1, 1)
get_distsparse_cpp(mat, 1, 2)
Rcpp::sourceCpp("src/dist2.cpp")
source("~/Documents/R/graphdist/examples/get_dist.R", echo=TRUE)
source("~/Documents/R/graphdist/examples/get_dist.R", echo=TRUE)
source("~/Documents/R/graphdist/examples/get_dist.R", echo=TRUE)
mat <- sparseMatrix(j = d$from, i = d$to, x = 1, dims = c(N,N), dimnames = list(from=levs, to=levs))
get_distsparse_cpp(mat, 0, 2)
d <-
"from,to
A,B
A,C
B,D
D,E
" |> data.table::fread(colClasses = "factor")
library(Matrix)
levs <- c(levels(d$from), levels(d$to)) |> unique()
N <- length(levs)
d[, from := factor(from, levels = levs)]
d[, to := factor(to, levels=levs)]
mat <- sparseMatrix(j = d$from, i = d$to, x = 1, dims = c(N,N), dimnames = list(from=levs, to=levs))
get_distsparse_cpp(mat, 0, 2)
get_distsparse_cpp(mat, 0, 3)
mat
get_distsparse_cpp(mat, 0, 3)
mat
set.seed(1)
N <- 1e6
M <- 1e8
from <- sample(N, size=M, replace = TRUE)
to <- sample(N, size=M, replace = TRUE)
mat <- sparseMatrix(j = from, i = t, x = 1, dims=c(N,N))
mat <- sparseMatrix(j = from, i = to, x = 1, dims=c(N,N))
mat
r <- get_distsparse_cpp(mat, 0, 2)
r
hist(r$distance)
r <- get_distsparse_cpp(mat, 0, 4)
hist(r$distance)
r <- get_distsparse_cpp(mat, 0, 6)
hist(r$distance)
system.time({
r <- get_distsparse_cpp(mat, 0, 6)
})
system.time({
r <- get_distsparse_cpp(mat, 0, 1)
})
system.time({
r <- get_distsparse_cpp(mat, 0, 3)
})
Rcpp::sourceCpp("src/dist2.cpp")
mat <- sparseMatrix(j = from, i = to, x = 1, dims=c(N,N))
system.time({
r <- get_distsparse_cpp(mat, 0, 1)
})
hist(r$distance)
# ds <- data.frame(
#   name = levs,
#   d = NA_integer_
# )
#
# f <- 1
# ds$d[f] <- 0
#
set.seed(1)
N <- 1e6
M <- 1e8
from <- sample(N, size=M, replace = TRUE)
to <- sample(N, size=M, replace = TRUE)
mat <- sparseMatrix(j = from, i = to, x = 1, dims=c(N,N))
system.time({
r <- get_distsparse_cpp(mat, 0, 1)
})
hist(r$distance)
r$node
r
Rcpp::sourceCpp("src/dist2.cpp")
r
Rcpp::sourceCpp("src/dist2.cpp")
r
N <- 1e6
M <- 1e8
# ds <- data.frame(
#   name = levs,
#   d = NA_integer_
# )
#
# f <- 1
# ds$d[f] <- 0
#
set.seed(1)
N <- 1e6
M <- 1e8
from <- sample(N, size=M, replace = TRUE)
to <- sample(N, size=M, replace = TRUE)
mat <- sparseMatrix(j = from, i = to, x = 1, dims=c(N,N))
system.time({
r <- get_distsparse_cpp(mat, 0, 1)
})
hist(r$distance)
r
system.time({
r <- get_distsparse_cpp(mat, 0, 2)
})
hist(r$distance)
system.time({
r <- get_distsparse_cpp(mat, 0, 4)
})
hist(r$distance)
r
system.time({
r <- get_distsparse_cpp(mat, 0, 5)
})
hist(r$distance)
system.time({
r <- get_distsparse_cpp(mat, 0, 5)
})
hist(r$distance)
system.time({
r <- get_distsparse_cpp(mat, 0,  5)
})
hist(r$distance)
r
